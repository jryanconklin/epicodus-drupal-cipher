<?php

function cipher_menu() {
    $items['caesar'] = array(
        'title' => 'Caesar Cipher', //Content Title
        'page callback' => 'drupal_get_form', //Callback function for view - uses built in drupal function to return form as callback.
        'page arguments' => array('caesar_form'),
        'access callback' => TRUE, //Give all users access
        'type' => MENU_NORMAL_ITEM, //Menu Item Type
    );
    $items['caesar_success_page'] = array(
        'title' => 'You Got This!',
        'page callback' => 'caesar_success',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    return $items;
}

//Function to Build Out the Form - Accessed via the Callback Function on the 'caesar' route
function caesar_form() {
    $form['shift_value'] = array(
        '#title' => 'Shift Value',
        '#type' => 'textfield',
        '#attributes' => array('placeholder' => t('Enter Number Between 1 and 25 to Shift By')),
        '#required' => TRUE,
        '#element_validate' => array('element_validate_number', 'element_validate_range'),
    );

    $form['shift_direction'] = array(
        '#title' => 'Shift Direction',
        '#type' => 'textfield',
        '#attributes' => array('placeholder' => t('Enter Right or Left Shift Direction')),
        '#required' => TRUE,
        '#element_validate' => array('element_validate_direction'),
    );

    $form['phrase'] = array(
        '#title' => 'Phrase',
        '#type' => 'textarea',
        '#attributes' => array('placeholder' => t('Enter Your Phrase (Max 255 Characters)')),
        '#required' => TRUE,
        '#rows' => 3,
        '#resizable' => FALSE,
        '#maxlength' => 255,
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Submit',
    );

    return $form;
}

function element_validate_range($element) {
    if ($element['#value'] > 25 || $element['#value'] < 1 ) {
        form_error($element, t('Please Enter a Number Between 1 and 25.'));
    }
}

function element_validate_direction($element) {

    $valid_directions = array('RIGHT', 'LEFT');

    $direction = strtoupper($element['#value']);
    $direction = trim($direction);

    if (!in_array($direction, $valid_directions)) {
        form_error($element, t('Please Enter Right or Left.'));
    }
}

// Form Submit Function for caeser form - process login and redirects to success page on button click
function caesar_form_submit($form, &$form_state) {

//validation alphabet
    $alphabet = array('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z');

    $shift_value = $form_state['values']['shift_value'];
    $shift_direction = $form_state['values']['shift_direction'];
    $original_phrase = $form_state['values']['phrase'];

//simplify direction
    $direction = strtoupper($shift_direction);
    $direction = trim($direction);

//create the letters array from the original phrase
    $letters = strtoupper($original_phrase);
    $letters = str_split($letters);

//create holding array for loop values
    $caesar_array = array();

// for each item in the letters single letter array
    foreach ($letters as $letter) {
        $key = array_search($letter, $alphabet);

        if ($direction == 'RIGHT') {
            $cipher_key = $key + $shift_value;
        } elseif($direction == 'LEFT') {
            $cipher_key = $key - $shift_value;
        }
        // if the item in the letters single letter array is an empty string, push the empty string to the array.
        if (!in_array($letter, $alphabet)) {
            array_push($caesar_array, $letter);
        } else {
            if ($cipher_key < 0) {
                $cipher_key = $cipher_key + 26;
            } elseif ($cipher_key > 26) {
                $cipher_key = $cipher_key - 26;
            } else {
                $cipher_key = $cipher_key;
            }
            array_push($caesar_array, $alphabet[$cipher_key]);
        }
    }

    $caesar_phrase = implode('', $caesar_array);

    $_SESSION['original_phrase'] = $original_phrase;
    $_SESSION['caesar_phrase'] = $caesar_phrase;

    $form_state['redirect'] = 'caesar_success_page';
}

// Success View for Caesar Form
function caesar_success() {
    $original_phrase = $_SESSION['original_phrase'];
    $caesar_phrase = $_SESSION['caesar_phrase'];
    return 'Keep it secret, keep it safe! Here is your translated phrase \'' . $caesar_phrase . '\' from the original version of \'' . $original_phrase . '.\'';
}
